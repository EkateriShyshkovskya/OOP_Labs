from Point2d import Point2d
from Vector2d import Vector2d


if __name__ == "__main__":
    
    p1 = Point2d(1, 1)
    p2 = Point2d(2, 2)
    print(f"Cтроковое представление p1: {p1}")  # Выводит строковое представление p1: (50, 100)
    print(f"Cтроковое представление p2: {p2}")  # Выводит строковое представление p2: (800, 600)
    print(f"Сравнение p1 и p2: {p1 == p2}")  # Сравнивает p1 и p2: False

    v1 = Vector2d(10, 1)
    v2 = Vector2d.frompoints(p1, p2) # Создает вектор от p1 до p2
    print(f"Cтроковое представление v1: {v1}")  # Выводит строковое представление v1: Vector2d(3, 4)
    print(f"Cтроковое представление v2: {v2}")  # Выводит строковое представление v2: Vector2d(750, 500)
    print(f"Вычисляет длину(модуль) v1: {abs(v1)}")  # Вычисляет длину v1: 5.0

    print(f"Сложение векторов v1 и v2: {v1 + v2}")  # Сложение v1 и v2: Vector2d(753, 504)
    print(f"Вычитание векторов v2 и v1: {v2 - v1}")  # Вычитание v1 из v2: Vector2d(747, 496)
    print(f"Умножение вектора v1 на скаляр: {v1 * 2}")   # Умножение v1 на скаляр: Vector2d(6, 8)
    print(f"Деление вектора v2 на скаляр: {v2 / 2}")   # Деление v2 на скаляр: Vector2d(375, 250)
 
    print(f"Скалярное произведение v1 и v2: {v1.dot(v2)}")          # Скалярное произведение v1 и v2: 3*750 + 4*500 = 4250
    print(f"Скалярное произведение через статический метод: {Vector2d.dot_product(v1, v2)}")  # Скалярное произведение через статический метод: 4250
    print(f"Векторное произведение v1 и v2: {v1.cross(v2)}")        # Векторное произведение v1 и v2: 3*500 - 4*750 = -1500
    print(f"Векторное произведение через статический метод: {Vector2d.cross_product(v1, v2)}") # Векторное произведение через статический метод: -1500

    # Вычисление смешанного произведения
    v3 = Vector2d(2, 5)
    print(f"Смешанное произведение: {v1.triple(v2, v3)}")  # v1 ⋅ (v2 × v3)
    print(f"Смешанное произведение через статический метод: {Vector2d.triple_product(v1, v2, v3)}")  # v1 ⋅ (v2 × v3)










